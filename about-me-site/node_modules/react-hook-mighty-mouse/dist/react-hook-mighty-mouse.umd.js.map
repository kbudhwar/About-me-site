{"version":3,"file":"react-hook-mighty-mouse.umd.js","sources":["../src/react-hook-mighty-mouse/useMightyMouse.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Mouse, EventType } from './types';\n\nconst initMouse: Mouse = {\n  position: {\n    client: { x: null, y: null },\n    screen: { x: null, y: null },\n    page: { x: null, y: null },\n  },\n  buttons: {\n    left: null,\n    middle: null,\n    right: null,\n    wheelDown: null,\n    wheelUp: null,\n  },\n  keyboard: {\n    ctrl: null,\n    shift: null,\n    alt: null,\n  },\n  eventType: null,\n  selectedElement: {\n    position: {\n      x: null,\n      y: null,\n      angle: null,\n    },\n    boundingRect: {\n      left: null,\n      top: null,\n      width: null,\n      height: null,\n    },\n    isHover: false,\n  },\n};\n\nconst useMightyMouse = (\n  touchEnabled: boolean = true,\n  selectedElementId: string | null = null,\n  selectedElementOffset: { x: number; y: number } = { x: 0, y: 0 },\n): Mouse => {\n  const [mouse, setMouse] = useState<Mouse>(initMouse);\n  let selectedEl: HTMLElement | null = null;\n\n  const onMouseTouchEvent = (event: Event): void => {\n    let clientX: number;\n    let clientY: number;\n    let screenX: number;\n    let screenY: number;\n    let pageX: number;\n    let pageY: number;\n    const buttons = { ...mouse.buttons };\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n      case 'mousedown':\n      case 'mouseup':\n      case 'wheel':\n        const mouseEvent = event as MouseEvent;\n        clientX = mouseEvent.clientX;\n        clientY = mouseEvent.clientY;\n        screenX = mouseEvent.screenX;\n        screenY = mouseEvent.screenY;\n        pageX = mouseEvent.pageX;\n        pageY = mouseEvent.pageY;\n        buttons.left = [1, 3, 5, 7].indexOf(mouseEvent.buttons) > -1;\n        buttons.right = [2, 3, 6, 7].indexOf(mouseEvent.buttons) > -1;\n        buttons.middle = [4, 5, 6, 7].indexOf(mouseEvent.buttons) > -1;\n        buttons.wheelDown = (event as WheelEvent).deltaY > 0;\n        buttons.wheelUp = (event as WheelEvent).deltaY < 0;\n        break;\n      case 'touchmove':\n      case 'touchstart':\n        const { touches } = event as TouchEvent;\n        const touchEvent = touches[0];\n        clientX = touchEvent.clientX;\n        clientY = touchEvent.clientY;\n        screenX = touchEvent.screenX;\n        screenY = touchEvent.screenY;\n        pageX = touchEvent.pageX;\n        pageY = touchEvent.pageY;\n        break;\n      default:\n        throw new Error(`Unknown event triggered \"${event.type}\"`);\n    }\n\n    const selectedElPosition = { ...mouse.selectedElement.position };\n    const selectedElBoundingRect = { ...mouse.selectedElement.boundingRect };\n    if (selectedEl) {\n      const { left, top, width, height } = selectedEl.getBoundingClientRect();\n      selectedElPosition.x = clientX - left - selectedElementOffset.x;\n      selectedElPosition.y = clientY - top - selectedElementOffset.y;\n      const rad2Deg = 180 / Math.PI;\n      const angleOffset = 180;\n      selectedElPosition.angle =\n        Math.atan2(selectedElPosition.y, -selectedElPosition.x) * rad2Deg + angleOffset;\n      selectedElBoundingRect.left = left;\n      selectedElBoundingRect.top = top;\n      selectedElBoundingRect.width = width;\n      selectedElBoundingRect.height = height;\n    }\n\n    setMouse(prevState => ({\n      ...prevState,\n      position: {\n        client: { x: clientX, y: clientY },\n        screen: { x: screenX, y: screenY },\n        page: { x: pageX, y: pageY },\n      },\n      buttons,\n      eventType: event.type,\n      selectedElement: {\n        ...prevState.selectedElement,\n        position: selectedElPosition,\n        boundingRect: selectedElBoundingRect,\n      },\n    }));\n  };\n\n  const onLeave = (): void => {\n    setMouse(initMouse);\n  };\n\n  const onSelectedElementEnter = (): void => {\n    const selectedElement = { ...mouse.selectedElement };\n    selectedElement.isHover = true;\n    setMouse(prevState => ({\n      ...prevState,\n      selectedElement,\n    }));\n  };\n\n  const onSelectedElementLeave = (): void => {\n    const selectedElement = { ...mouse.selectedElement };\n    selectedElement.isHover = false;\n    setMouse(prevState => ({\n      ...prevState,\n      selectedElement,\n    }));\n  };\n\n  const onKeyEvent = (event: Event): void => {\n    const { ctrlKey, shiftKey, altKey } = event as MouseEvent;\n    setMouse(prevState => ({\n      ...prevState,\n      keyboard: {\n        ctrl: ctrlKey,\n        shift: shiftKey,\n        alt: altKey,\n      },\n    }));\n  };\n\n  useEffect(() => {\n    if (selectedElementId) {\n      selectedEl = document.getElementById(selectedElementId);\n      if (!selectedEl) {\n        throw new Error(`Element with id=\"${selectedElementId}\" doesn't exists`);\n      }\n      selectedEl.addEventListener('mouseenter', onSelectedElementEnter);\n      selectedEl.addEventListener('mouseleave', onSelectedElementLeave);\n    }\n    document.addEventListener('mousemove', onMouseTouchEvent);\n    document.addEventListener('mousedown', onMouseTouchEvent);\n    document.addEventListener('mouseup', onMouseTouchEvent);\n    document.addEventListener('wheel', onMouseTouchEvent);\n    document.addEventListener('mouseleave', onLeave);\n    document.addEventListener('keydown', onKeyEvent);\n    document.addEventListener('keyup', onKeyEvent);\n    if (touchEnabled) {\n      window.addEventListener('touchmove', onMouseTouchEvent);\n      window.addEventListener('touchstart', onMouseTouchEvent);\n      window.addEventListener('touchend', onLeave);\n    }\n\n    return (): void => {\n      document.removeEventListener('mousemove', onMouseTouchEvent);\n      document.removeEventListener('mousedown', onMouseTouchEvent);\n      document.removeEventListener('mouseup', onMouseTouchEvent);\n      document.removeEventListener('wheel', onMouseTouchEvent);\n      document.removeEventListener('mouseleave', onLeave);\n      document.removeEventListener('keydown', onKeyEvent);\n      document.removeEventListener('keyup', onKeyEvent);\n      if (touchEnabled) {\n        window.removeEventListener('touchmove', onMouseTouchEvent);\n        window.removeEventListener('touchstart', onMouseTouchEvent);\n        window.removeEventListener('touchend', onLeave);\n      }\n    };\n  }, []);\n  return mouse;\n};\n\nexport default useMightyMouse;\n"],"names":["initMouse","position","client","x","y","screen","page","buttons","left","middle","right","wheelDown","wheelUp","keyboard","ctrl","shift","alt","eventType","selectedElement","angle","boundingRect","top","width","height","isHover","touchEnabled","selectedElementId","selectedElementOffset","_a","mouse","setMouse","selectedEl","onMouseTouchEvent","event","clientX","clientY","screenX","screenY","pageX","pageY","type","mouseEvent","indexOf","deltaY","touchEvent","Error","selectedElPosition","selectedElBoundingRect","top_1","rad2Deg","Math","PI","atan2","prevState","onLeave","onSelectedElementEnter","onSelectedElementLeave","onKeyEvent","ctrlKey","shiftKey","altKey","useEffect","document","getElementById","addEventListener","window","removeEventListener"],"mappings":"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"}